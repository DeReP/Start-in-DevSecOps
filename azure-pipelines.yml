trigger:
- master

jobs:

- job: build  
  pool:
    name: DEVOPS-SEC-PROJ
  
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: 3.9
      architecture: 'x64'

  - task: PythonScript@0
    displayName: 'Export project path'
    inputs:
      scriptSource: 'inline'
      script: |
        """Search all subdirectories for `manage.py`."""
        from glob import iglob
        from os import path
        manage_py = next(iglob(path.join('**', 'manage.py'), recursive=True), None)
        if not manage_py:
            raise SystemExit('Could not find a Django project')
        project_location = path.dirname(path.abspath(manage_py))
        print('Found Django project in', project_location)
        print('##vso[task.setvariable variable=projectRoot]{}'.format(project_location))
  
  - script: |
      pushd '$(projectRoot)'
      python -m venv env
      source env/bin/activate
      python -m pip install --upgrade pip setuptools wheel
      pip install -r requirments.txt  
    displayName: 'Install requirements'
  
- job: sonar_sec_test
  dependsOn: build
  pool:
    name: DEVOPS-SEC-PROJ
  steps:
    # Prepare Analysis Configuration task
    - task: SonarQubePrepare@4
      inputs:
        SonarQube: 'devops sec proj sonar'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'Automation_DevOps_security_project'

    # Run Code Analysis task
    - task: SonarQubeAnalyze@4

    # Publish Quality Gate Result task
    - task: SonarQubePublish@4
      inputs:
        pollingTimeoutSec: '300'